[
  {
    "id": "moose-cormas",
    "title": "Analysing Cormas Code with Moose",
    "img": "nicolas-moose.png",
    "supervisors": [
      "Nicolas Anquetil",
      "Oleksandr Zaitsev"
    ],
    "description": "[Moose](https://moosetechnology.org/) is a platform for software and data analysis implemented in Pharo. It provides an extensive toolkit for exploring the source code of a given project, find code defects, bad practices, etc. Cormas is a legacy software system that has been in development for more than 25 years. It has been migrated from one dialect of Smalltalk to another, it has been maintained by different people with different levels of expertise and different programming practices. As such, Cormas is a very interesting case study for code analysis. Using Moose, we can detect dead code (methods that are no longer used), split god classes and methods (the ones that are clearly too large), reorganize packages to reduce coupling, improve test coverage. All this information can be extremely valuable for Cormas development and it can also contribute to the improvement of Moose platform.",
    "goal": "- Learn to use Moose (we have detailed guides and tutorials)\n- Load the source code of Cormas into Moose\n- Perform various analyses and build visualizations\n- Report the findings to the Cormas community\n- Improve the source code of Cormas",
    "keywords": [
      "Code analysis",
      "Code comprehension",
      "Visualizations",
      "Programming"
    ],
    "size": "Large",
    "difficulty": "Easy",
    "skills": {
      "required": [
        "Pharo",
        "Object-oriented programming"
      ],
      "preferred": [
        "Cormas",
        "Moose"
      ]
    }
  }
]